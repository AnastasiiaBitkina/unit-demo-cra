name: Release
on:  
  push:
    tags:
      - 'v*'

jobs:  
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
      
      - name: Generate changelog
        run: |
          github_changelog_generator -u ${{ github.repository_owner }} -p ${{ github.event.repository.name }} --token ${{ secrets.GITHUB_TOKEN }} --future-release ${{ env.VERSION }}
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body_path: ./CHANGELOG.md

      
      - name: Create Release Issue
        id: create_issue
        uses: actions/github-script@v5
        with:
          script: |
            const issue = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release ${process.env.VERSION}`,
              body: `Author: ${context.actor}\nDate: ${new Date().toISOString()}\nVersion: ${process.env.VERSION}\nChangelog: ${process.env.CHANGELOG}`,
              labels: ['RELEASE']
            };
            const result = await github.rest.issues.create(issue);
            return result.data.number;

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install

      - name: Run tests
        run: npm test

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

      - name: Update Issue with test results and deploy info
        uses: actions/github-script@v5
        with:
          script: |
            const issue_number = ${{ steps.create_issue.outputs.result }};
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number
            });
            const new_body = issue.data.body +
              "\n\nTest Results: [Link to Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" +
              "\n\nDeploy Info: Successfully deployed to gh-pages.";
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: new_body
            });

      - name: Close Issue
        uses: actions/github-script@v5
        with:
          script: |
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.create_issue.outputs.result }},
              state: "closed"
            });



